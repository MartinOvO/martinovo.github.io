import{_ as e,c as t,o as a,V as l,a5 as r}from"./chunks/framework.WpdMTDUc.js";const g=JSON.parse('{"title":"使用 OpenCore 引导安装黑苹果","description":"","frontmatter":{},"headers":[],"relativePath":"aopencore/index.md","filePath":"aopencore/index.md","lastUpdated":1705827524000}'),s={name:"aopencore/index.md"},n=l('<h1 id="使用-opencore-引导安装黑苹果" tabindex="-1">使用 OpenCore 引导安装黑苹果 <a class="header-anchor" href="#使用-opencore-引导安装黑苹果" aria-label="Permalink to &quot;使用 OpenCore 引导安装黑苹果&quot;">​</a></h1><p><img src="'+r+`" alt="award"></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><blockquote><p>OpenCore (简称 OC)是一个着眼于未来的开源引导工具，最初诞生于 HermitCrabs 实验室，现在接手于 Acidanthera，其目的是创造一个更加严谨的模组化的轻量引导系统。尽管 OpenCore 的主要用途是黑苹果，它也支持其他操作系统的引导。</p><p>此文档只能作为探索的起点，请仔细阅读并时刻牢记你的硬件可能有不同的配置需求。</p></blockquote><h2 id="阅读" tabindex="-1">阅读 <a class="header-anchor" href="#阅读" aria-label="Permalink to &quot;阅读&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">相关阅读</p><p>推荐大家在阅读本文档的同时也可以阅读以下资料。</p></div><p><a href="https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Configuration.pdf" target="_blank" rel="noreferrer">OpenCore 官方文档</a> - OpenCore 最权威的资料，有能力可以看。</p><p><a href="https://oc.skk.moe/" target="_blank" rel="noreferrer">OpenCore 简体中文参考手册</a></p><p><a href="https://dortania.github.io/OpenCore-Install-Guide/" target="_blank" rel="noreferrer">OpenCore 安装指南</a></p><p><a href="https://blog.daliansky.net/OpenCore-BootLoader.html" target="_blank" rel="noreferrer">精解 OpenCore - 黑果小兵</a></p><p><a href="https://blog.xjn819.com/post/opencore-guide.html" target="_blank" rel="noreferrer">使用 OpenCore 引导黑苹果 - Xjn&#39;s Blog</a></p><h2 id="软件下载" tabindex="-1">软件下载 <a class="header-anchor" href="#软件下载" aria-label="Permalink to &quot;软件下载&quot;">​</a></h2><ul><li><a href="https://github.com/corpnewt/ProperTree" target="_blank" rel="noreferrer">ProperTree</a></li><li><a href="https://github.com/acidanthera/OpenCorePkg/releases" target="_blank" rel="noreferrer">OpenCore</a></li><li><a href="https://github.com/headkaze/Hackintool/releases" target="_blank" rel="noreferrer">Hackintool</a></li></ul><h2 id="bios-设置" tabindex="-1">BIOS 设置 <a class="header-anchor" href="#bios-设置" aria-label="Permalink to &quot;BIOS 设置&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>在设置 BIOS 之前需要将所有 BIOS 选项恢复为默认。</p></div><ul><li>禁用</li></ul><table><thead><tr><th>英文</th><th>中文</th><th style="text-align:right;">设置</th></tr></thead><tbody><tr><td>Fast Boot</td><td>快速启动</td><td style="text-align:right;">Disabled/禁用</td></tr><tr><td>CFG Lock</td><td>CFG 锁</td><td style="text-align:right;">Disabled/禁用</td></tr><tr><td>VT-d</td><td>VT-d</td><td style="text-align:right;">Disabled/禁用</td></tr><tr><td>CSM</td><td>兼容性支持模块</td><td style="text-align:right;">Disabled/禁用</td></tr><tr><td>Intel SGX</td><td>Intel SGX</td><td style="text-align:right;">Disabled/禁用</td></tr><tr><td>Legacy RTC Device</td><td>传统 RTC 设备</td><td style="text-align:right;">Disabled/禁用</td></tr></tbody></table><ul><li>启用</li></ul><table><thead><tr><th>英文</th><th>中文</th><th style="text-align:right;">设置</th></tr></thead><tbody><tr><td>VT-x</td><td>VT-x</td><td style="text-align:right;">Enabled/启用</td></tr><tr><td>Above 4G decoding</td><td>大于 4G 地址空间解码</td><td style="text-align:right;">Enabled/启用</td></tr><tr><td>Hyper Threading</td><td>处理器超线程</td><td style="text-align:right;">Enabled/启用</td></tr><tr><td>Execute Disable Bit</td><td>执行禁止位</td><td style="text-align:right;">Enabled/启用</td></tr><tr><td>EHCI/XHCI Hand-off</td><td>接手 EHCI/XHCI 控制</td><td style="text-align:right;">Enabled/启用</td></tr><tr><td>OS type</td><td>操作系统类型</td><td style="text-align:right;">Other OS</td></tr></tbody></table><div class="danger custom-block"><p class="custom-block-title">提示</p><ol><li>将操作系统设置为 &quot;Other OS&quot; 模式部分主板会将系统认作是 Windows 7 从而禁用 UEFI 的某些功能并开启 CSM，如果出现此问题可设置为 &quot;Windows 8.1/10&quot;。200 系以后的主板理论上不存在这个问题。</li><li>以上选项在其他主板上可能出现不存在的设置项，忽略掉即可。</li></ol></div><h2 id="整理-opencore-目录" tabindex="-1">整理 OpenCore 目录 <a class="header-anchor" href="#整理-opencore-目录" aria-label="Permalink to &quot;整理 OpenCore 目录&quot;">​</a></h2><p>解压下载好的 OpenCore 文件，把 Doc 文件夹里面的 Sample.plist 改名为 config.plist，并把此文件移动到 EFI 目录里。</p><p>打开 EFI/Kexts，把常用的一些 kexts 放进去，一般情况下需要放以下 Kexts:</p><ul><li><a href="https://github.com/acidanthera/Lilu/releases" target="_blank" rel="noreferrer">Lilu.kext</a> - 黑苹果必备驱动</li><li><a href="https://github.com/acidanthera/VirtualSMC/releases" target="_blank" rel="noreferrer">VirtualSMC.kext</a> - 传感器驱动依赖</li><li>SMCProcessor.kext - CPU 核心传感器</li><li>SMCSuperIO.kext - IO 传感器</li><li><a href="https://github.com/acidanthera/WhateverGreen/releases" target="_blank" rel="noreferrer">WhateverGreen.kext</a> - 显卡驱动</li><li><a href="https://github.com/acidanthera/IntelMausi/releases" target="_blank" rel="noreferrer">IntelMausi.kext</a> - Intel 类千兆网卡驱动</li><li><a href="https://github.com/acidanthera/AppleALC/releases" target="_blank" rel="noreferrer">Applealc.kext</a> - 声卡驱动</li><li><a href="https://github.com/Sniki/OS-X-USB-Inject-All/releases" target="_blank" rel="noreferrer">Usbinjectall.kext</a> - USB 驱动</li><li><a href="https://github.com/acidanthera/NVMeFix/releases" target="_blank" rel="noreferrer">NVMeFix.kext</a></li></ul><p>打开 EFI/Drives，里面的驱动介绍如下:</p><ul><li>OpenRuntime.efi 内存运用等必要的插件，<strong>必须安装</strong></li><li><a href="https://github.com/acidanthera/OcBinaryData/blob/master/Drivers/HfsPlus.efi" target="_blank" rel="noreferrer">HfsPlus.efi</a> 用于 HFS 格式文件系统，<strong>必须安装</strong></li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><p>以上所展示的是初始配置必要安装的驱动，其他驱动初始配置阶段可略过</p></div><ul><li>AudioDxe.efi 开机 UEFI 若需要声音效果需要加载</li><li>CrScreenshotDxe.efi 开机 UEFI 的截图工具</li><li>HiiDatabase.efi 用于给 Ivy Bridge (3 代酷睿) 或更老代主板上支持 UEFI 字体渲染，UEFI Shell 中文字渲染异常时使用，新主板不需要</li><li>NvmExpressDxe.efi 用于在 Haswell (4 代酷睿) 或更老的主板上支持 NVMe 硬盘，新主板不需要</li><li>OpenCanopy.efi 加载第三方开机主题</li><li>OpenUsbKbDxe.efi 给使用模拟 UEFI 的老主板在 OpenCore 界面正常输入用的，请勿在 Ivy Bridge (3 代酷睿)及以上的主板上使用</li><li>Ps2KeyboardDxe.efi PS2 键盘所需插件</li><li>Ps2MouseDxe.efi PS2 鼠标所需插件</li><li>UsbMouseDxe.efi 当 MacOS 被安装在虚拟机上所需要的鼠标插件</li><li>XhciDxe.efi 用于在 Sandy Bridge（2 代）及之前或更老的主板上加载 XHCI 控制器</li></ul><p>整理好的文件应该是这样</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>EFI</span></span>
<span class="line"><span>├─ BOOT</span></span>
<span class="line"><span>│  └─ BOOTx64.efi</span></span>
<span class="line"><span>└─ OC</span></span>
<span class="line"><span>   ├─ ACPI</span></span>
<span class="line"><span>   ├─ Drivers</span></span>
<span class="line"><span>   │  ├─ OpenRuntime.efi</span></span>
<span class="line"><span>   │  └─ HfsPlus.efi</span></span>
<span class="line"><span>   ├─ Kext</span></span>
<span class="line"><span>   │  ├─ Lilu.kext</span></span>
<span class="line"><span>   │  ├─ VirtualSMC.kext</span></span>
<span class="line"><span>   │  ├─ SMCProcessor.kext</span></span>
<span class="line"><span>   │  ├─ SMCSuperIO.kext</span></span>
<span class="line"><span>   │  ├─ WhateverGreen.kext</span></span>
<span class="line"><span>   │  ├─ IntelMausi.kext</span></span>
<span class="line"><span>   │  ├─ Applealc.kext</span></span>
<span class="line"><span>   │  ├─ Usbinjectall.kext</span></span>
<span class="line"><span>   │  └─ NVMeFix.kext</span></span>
<span class="line"><span>   ├─ Resources</span></span>
<span class="line"><span>   ├─ Tools</span></span>
<span class="line"><span>   ├─ OpenCore.efi</span></span>
<span class="line"><span>   └─ config.plist</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">结束</p><p>至此前期准备工作告一段落</p></div><h2 id="配置-config-plist" tabindex="-1">配置 config.plist <a class="header-anchor" href="#配置-config-plist" aria-label="Permalink to &quot;配置 config.plist&quot;">​</a></h2><ul><li><a href="./aacpi.html">ACPI</a></li><li><a href="./abooter.html">Booter</a></li><li><a href="./adeviceproperties.html">DeviceProperties</a></li><li><a href="./akernel.html">Kernel</a></li><li><a href="./amisc.html">Misc</a></li><li><a href="./anvram.html">NVRAM</a></li><li><a href="./aplatforminfo.html">PlatformInfo</a></li><li><a href="./auefi.html">UEFI</a></li></ul><hr>`,34),i=[n];function p(o,d,h,c,b,u){return a(),t("div",null,i)}const k=e(s,[["render",p]]);export{g as __pageData,k as default};
